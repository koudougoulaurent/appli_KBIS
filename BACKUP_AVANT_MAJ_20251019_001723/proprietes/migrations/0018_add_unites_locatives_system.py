# Generated by Django 5.2.5 on 2025-09-03 13:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('proprietes', '0017_surface_optional'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UniteLocative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_unite', models.CharField(help_text='Ex: Apt 101, Bureau 205, Chambre A12', max_length=20, verbose_name="Numéro d'unité")),
                ('nom', models.CharField(help_text="Nom descriptif de l'unité", max_length=100, verbose_name="Nom de l'unité")),
                ('type_unite', models.CharField(choices=[('appartement', 'Appartement'), ('studio', 'Studio'), ('bureau', 'Bureau'), ('local_commercial', 'Local commercial'), ('chambre', 'Chambre meublée'), ('parking', 'Place de parking'), ('cave', 'Cave/Débarras'), ('autre', 'Autre')], max_length=20, verbose_name="Type d'unité")),
                ('etage', models.IntegerField(blank=True, help_text="Numéro d'étage (0 pour RDC, -1 pour sous-sol)", null=True, verbose_name='Étage')),
                ('surface', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Surface (m²)')),
                ('nombre_pieces', models.PositiveIntegerField(default=1, verbose_name='Nombre de pièces')),
                ('nombre_chambres', models.PositiveIntegerField(default=0, verbose_name='Nombre de chambres')),
                ('nombre_salles_bain', models.PositiveIntegerField(default=0, verbose_name='Nombre de salles de bain')),
                ('meuble', models.BooleanField(default=False, verbose_name='Meublé')),
                ('balcon', models.BooleanField(default=False, verbose_name='Balcon/Terrasse')),
                ('parking_inclus', models.BooleanField(default=False, verbose_name='Parking inclus')),
                ('climatisation', models.BooleanField(default=False, verbose_name='Climatisation')),
                ('internet_inclus', models.BooleanField(default=False, verbose_name='Internet inclus')),
                ('loyer_mensuel', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Loyer mensuel')),
                ('charges_mensuelles', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Charges mensuelles')),
                ('caution_demandee', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Caution demandée')),
                ('statut', models.CharField(choices=[('disponible', 'Disponible'), ('occupee', 'Occupée'), ('reservee', 'Réservée'), ('en_renovation', 'En rénovation'), ('hors_service', 'Hors service')], default='disponible', max_length=20, verbose_name='Statut')),
                ('date_disponibilite', models.DateField(blank=True, null=True, verbose_name='Date de disponibilité')),
                ('description', models.TextField(blank=True, help_text="Description détaillée de l'unité", verbose_name='Description')),
                ('notes_privees', models.TextField(blank=True, help_text='Notes internes non visibles par les locataires', verbose_name='Notes privées')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Supprimé logiquement')),
                ('propriete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unites_locatives', to='proprietes.propriete', verbose_name='Propriété')),
            ],
            options={
                'verbose_name': 'Unité locative',
                'verbose_name_plural': 'Unités locatives',
                'ordering': ['propriete', 'etage', 'numero_unite'],
                'unique_together': {('propriete', 'numero_unite')},
            },
        ),
        migrations.CreateModel(
            name='ReservationUnite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reservation', models.DateTimeField(auto_now_add=True, verbose_name='Date de réservation')),
                ('date_debut_souhaitee', models.DateField(verbose_name='Date de début souhaitée')),
                ('date_fin_prevue', models.DateField(blank=True, null=True, verbose_name='Date de fin prévue')),
                ('date_expiration', models.DateTimeField(help_text='Date limite pour confirmer la réservation', verbose_name="Date d'expiration de la réservation")),
                ('montant_reservation', models.DecimalField(decimal_places=2, default=0.0, help_text="Montant versé pour réserver l'unité", max_digits=10, verbose_name='Montant de réservation')),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('confirmee', 'Confirmée'), ('annulee', 'Annulée'), ('expiree', 'Expirée'), ('convertie_contrat', 'Convertie en contrat')], default='en_attente', max_length=20, verbose_name='Statut')),
                ('notes', models.TextField(blank=True, help_text='Notes sur la réservation', verbose_name='Notes')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Supprimé logiquement')),
                ('cree_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('locataire_potentiel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='proprietes.locataire', verbose_name='Locataire potentiel')),
                ('unite_locative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='proprietes.unitelocative', verbose_name='Unité locative')),
            ],
            options={
                'verbose_name': "Réservation d'unité",
                'verbose_name_plural': "Réservations d'unités",
                'ordering': ['-date_reservation'],
            },
        ),
        migrations.AddField(
            model_name='piece',
            name='unite_locative',
            field=models.ForeignKey(blank=True, help_text='Unité locative à laquelle appartient cette pièce (optionnel)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pieces', to='proprietes.unitelocative', verbose_name='Unité locative'),
        ),
    ]
