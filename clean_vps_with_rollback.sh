#!/bin/bash

# Script de nettoyage complet VPS avec rollback - KBIS IMMOBILIER
# Usage: ./clean_vps_with_rollback.sh

set -e

echo "üßπ Nettoyage complet du VPS avec possibilit√© de rollback..."

# Variables
APP_NAME="kbis_immobilier"
APP_DIR="/var/www/$APP_NAME"
SERVICE_NAME="kbis_immobilier"
NGINX_SITE="kbis_immobilier"
BACKUP_DIR="/var/backups/kbis_immobilier_cleanup_$(date +%Y%m%d_%H%M%S)"
ROLLBACK_SCRIPT="/var/backups/rollback_$(date +%Y%m%d_%H%M%S).sh"

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_blue() {
    echo -e "${BLUE}[BACKUP]${NC} $1"
}

# V√©rification des privil√®ges root
if [ "$EUID" -ne 0 ]; then
    log_error "Ce script doit √™tre ex√©cut√© en tant que root"
    exit 1
fi

echo "=========================================="
echo "NETTOYAGE COMPLET VPS AVEC ROLLBACK"
echo "=========================================="

# 1. Cr√©ation du r√©pertoire de sauvegarde
log_blue "1. Cr√©ation du r√©pertoire de sauvegarde..."
mkdir -p $BACKUP_DIR
log_info "Sauvegarde dans: $BACKUP_DIR"

# 2. Sauvegarde de l'application existante
log_blue "2. Sauvegarde de l'application existante..."
if [ -d "$APP_DIR" ]; then
    cp -r $APP_DIR $BACKUP_DIR/application_backup
    log_info "Application sauvegard√©e"
else
    log_warn "Aucune application existante trouv√©e"
fi

# 3. Sauvegarde de la configuration Nginx
log_blue "3. Sauvegarde de la configuration Nginx..."
if [ -f "/etc/nginx/sites-available/$NGINX_SITE" ]; then
    cp /etc/nginx/sites-available/$NGINX_SITE $BACKUP_DIR/nginx_site.conf
    log_info "Configuration Nginx sauvegard√©e"
fi

if [ -L "/etc/nginx/sites-enabled/$NGINX_SITE" ]; then
    echo "Lien symbolique Nginx existant" > $BACKUP_DIR/nginx_symlink.txt
    log_info "Lien symbolique Nginx document√©"
fi

# 4. Sauvegarde de la configuration systemd
log_blue "4. Sauvegarde de la configuration systemd..."
if [ -f "/etc/systemd/system/$SERVICE_NAME.service" ]; then
    cp /etc/systemd/system/$SERVICE_NAME.service $BACKUP_DIR/systemd_service.service
    log_info "Service systemd sauvegard√©"
fi

# 5. Sauvegarde de la base de donn√©es
log_blue "5. Sauvegarde de la base de donn√©es..."
if command -v psql &> /dev/null; then
    sudo -u postgres pg_dump kbis_immobilier > $BACKUP_DIR/database_backup.sql 2>/dev/null || log_warn "Impossible de sauvegarder la base de donn√©es"
    log_info "Base de donn√©es sauvegard√©e"
fi

# 6. Sauvegarde des logs
log_blue "6. Sauvegarde des logs..."
mkdir -p $BACKUP_DIR/logs
if [ -d "/var/log/gunicorn" ]; then
    cp -r /var/log/gunicorn $BACKUP_DIR/logs/ 2>/dev/null || true
fi
if [ -d "/var/log/django" ]; then
    cp -r /var/log/django $BACKUP_DIR/logs/ 2>/dev/null || true
fi
journalctl -u $SERVICE_NAME --no-pager > $BACKUP_DIR/logs/gunicorn_journal.log 2>/dev/null || true
log_info "Logs sauvegard√©s"

# 7. Cr√©ation du script de rollback
log_blue "7. Cr√©ation du script de rollback..."
cat > $ROLLBACK_SCRIPT << EOF
#!/bin/bash
# Script de rollback automatique - KBIS IMMOBILIER
# Cr√©√© le: $(date)

echo "üîÑ Restauration depuis la sauvegarde..."

# Arr√™t des services
systemctl stop $SERVICE_NAME 2>/dev/null || true
systemctl stop nginx 2>/dev/null || true

# Restauration de l'application
if [ -d "$BACKUP_DIR/application_backup" ]; then
    rm -rf $APP_DIR
    cp -r $BACKUP_DIR/application_backup $APP_DIR
    chown -R www-data:www-data $APP_DIR
    echo "‚úÖ Application restaur√©e"
fi

# Restauration de la configuration Nginx
if [ -f "$BACKUP_DIR/nginx_site.conf" ]; then
    cp $BACKUP_DIR/nginx_site.conf /etc/nginx/sites-available/$NGINX_SITE
    ln -sf /etc/nginx/sites-available/$NGINX_SITE /etc/nginx/sites-enabled/
    echo "‚úÖ Configuration Nginx restaur√©e"
fi

# Restauration du service systemd
if [ -f "$BACKUP_DIR/systemd_service.service" ]; then
    cp $BACKUP_DIR/systemd_service.service /etc/systemd/system/$SERVICE_NAME.service
    systemctl daemon-reload
    echo "‚úÖ Service systemd restaur√©"
fi

# Restauration de la base de donn√©es
if [ -f "$BACKUP_DIR/database_backup.sql" ]; then
    sudo -u postgres psql -c "DROP DATABASE IF EXISTS kbis_immobilier;"
    sudo -u postgres psql -c "CREATE DATABASE kbis_immobilier;"
    sudo -u postgres psql kbis_immobilier < $BACKUP_DIR/database_backup.sql
    echo "‚úÖ Base de donn√©es restaur√©e"
fi

# Red√©marrage des services
systemctl start $SERVICE_NAME
systemctl restart nginx

echo "‚úÖ Rollback termin√© avec succ√®s!"
echo "üìÅ Sauvegarde conserv√©e dans: $BACKUP_DIR"
EOF

chmod +x $ROLLBACK_SCRIPT
log_info "Script de rollback cr√©√©: $ROLLBACK_SCRIPT"

# 8. Nettoyage complet
log_blue "8. Nettoyage complet du syst√®me..."

# Arr√™t des services
log_info "Arr√™t des services..."
systemctl stop $SERVICE_NAME 2>/dev/null || true
systemctl stop nginx 2>/dev/null || true

# Suppression de l'application
log_info "Suppression de l'application..."
rm -rf $APP_DIR

# Suppression du service systemd
log_info "Suppression du service systemd..."
systemctl disable $SERVICE_NAME 2>/dev/null || true
rm -f /etc/systemd/system/$SERVICE_NAME.service
systemctl daemon-reload

# Suppression de la configuration Nginx
log_info "Suppression de la configuration Nginx..."
rm -f /etc/nginx/sites-available/$NGINX_SITE
rm -f /etc/nginx/sites-enabled/$NGINX_SITE
rm -f /etc/nginx/sites-enabled/default

# Suppression des logs
log_info "Suppression des logs..."
rm -rf /var/log/gunicorn
rm -rf /var/log/django

# Suppression de la base de donn√©es (optionnel)
read -p "Voulez-vous supprimer la base de donn√©es PostgreSQL? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    log_info "Suppression de la base de donn√©es..."
    sudo -u postgres psql -c "DROP DATABASE IF EXISTS kbis_immobilier;" 2>/dev/null || true
    sudo -u postgres psql -c "DROP USER IF EXISTS kbis_user;" 2>/dev/null || true
fi

# Nettoyage des packages (optionnel)
read -p "Voulez-vous supprimer les packages Python et PostgreSQL? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    log_info "Suppression des packages..."
    apt remove --purge -y python3-pip python3-venv postgresql postgresql-contrib nginx redis-server 2>/dev/null || true
    apt autoremove -y
fi

# 9. V√©rification du nettoyage
log_blue "9. V√©rification du nettoyage..."
echo "V√©rification des r√©pertoires:"
ls -la /var/www/ | grep $APP_NAME || log_info "‚úÖ R√©pertoire application supprim√©"

echo "V√©rification des services:"
systemctl list-units --type=service | grep $SERVICE_NAME || log_info "‚úÖ Service supprim√©"

echo "V√©rification Nginx:"
ls -la /etc/nginx/sites-enabled/ | grep $NGINX_SITE || log_info "‚úÖ Configuration Nginx supprim√©e"

# 10. R√©sum√© final
echo "=========================================="
echo "NETTOYAGE TERMIN√â AVEC SUCC√àS"
echo "=========================================="

log_info "‚úÖ VPS nettoy√© compl√®tement"
log_info "üìÅ Sauvegarde compl√®te dans: $BACKUP_DIR"
log_info "üîÑ Script de rollback: $ROLLBACK_SCRIPT"

echo ""
log_warn "COMMANDES UTILES:"
echo "  - Rollback complet: sudo $ROLLBACK_SCRIPT"
echo "  - Voir la sauvegarde: ls -la $BACKUP_DIR"
echo "  - Red√©ployer: git clone <repo> $APP_DIR && sudo ./deploy_vps.sh"

echo ""
log_info "Le VPS est maintenant propre et pr√™t pour un nouveau d√©ploiement!"
