#!/usr/bin/env python3
"""
Script de d√©bogage pour identifier l'erreur de type dans le service.
"""

import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gestion_immobiliere.settings')
django.setup()

from paiements.services_intelligents_retraits import ServiceContexteIntelligentRetraits
from proprietes.models import Bailleur

def debug_service():
    """D√©bogage √©tape par √©tape du service."""
    print("üîç D√©bogage du service de contexte intelligent")
    print("=" * 50)
    
    try:
        # R√©cup√©rer le premier bailleur disponible
        bailleur = Bailleur.objects.filter(actif=True).first()
        if not bailleur:
            print("‚ùå Aucun bailleur actif trouv√©")
            return
        
        print(f"‚úÖ Bailleur trouv√© : {bailleur.get_nom_complet()} (ID: {bailleur.id})")
        
        # Test √©tape par √©tape
        print("\n1Ô∏è‚É£ Test des informations du bailleur...")
        try:
            infos = ServiceContexteIntelligentRetraits._get_infos_bailleur(bailleur)
            print("‚úÖ Informations du bailleur OK")
        except Exception as e:
            print(f"‚ùå Erreur infos bailleur : {e}")
            return
        
        print("\n2Ô∏è‚É£ Test des propri√©t√©s...")
        try:
            proprietes = ServiceContexteIntelligentRetraits._get_proprietes_bailleur(bailleur)
            print("‚úÖ Propri√©t√©s OK")
        except Exception as e:
            print(f"‚ùå Erreur propri√©t√©s : {e}")
            import traceback
            traceback.print_exc()
            return
        
        print("\n3Ô∏è‚É£ Test des contrats...")
        try:
            contrats = ServiceContexteIntelligentRetraits._get_contrats_actifs(bailleur)
            print("‚úÖ Contrats OK")
        except Exception as e:
            print(f"‚ùå Erreur contrats : {e}")
            import traceback
            traceback.print_exc()
            return
        
        print("\n4Ô∏è‚É£ Test des paiements...")
        try:
            paiements = ServiceContexteIntelligentRetraits._get_paiements_recents(bailleur)
            print("‚úÖ Paiements OK")
        except Exception as e:
            print(f"‚ùå Erreur paiements : {e}")
            import traceback
            traceback.print_exc()
            return
        
        print("\nüéâ Tous les tests sont pass√©s !")
        
    except Exception as e:
        print(f"‚ùå Erreur g√©n√©rale : {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    debug_service()
