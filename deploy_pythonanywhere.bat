@echo off
REM ===========================================
REM SCRIPT DE D√âPLOIEMENT PYTHONANYWHERE (WINDOWS)
REM ===========================================

echo üöÄ D√âPLOIEMENT SUR PYTHONANYWHERE - APPLICATION IMMOBILI√àRE
echo ==========================================================

REM Variables de configuration
set PROJECT_NAME=gestion_immobiliere
set PYTHON_VERSION=3.10
set REQUIREMENTS_FILE=requirements_pythonanywhere.txt
set SETTINGS_FILE=settings_pythonanywhere

REM V√©rification des pr√©requis
echo [INFO] V√©rification des pr√©requis...

REM V√©rifier si Python 3.10 est disponible
python3.10 --version >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Python 3.10 n'est pas install√© ou n'est pas dans le PATH
    pause
    exit /b 1
)

REM V√©rifier si le fichier requirements existe
if not exist "%REQUIREMENTS_FILE%" (
    echo [ERROR] Le fichier %REQUIREMENTS_FILE% n'existe pas
    pause
    exit /b 1
)

REM V√©rifier si manage.py existe
if not exist "manage.py" (
    echo [ERROR] Le fichier manage.py n'existe pas. √ätes-vous dans le bon r√©pertoire ?
    pause
    exit /b 1
)

echo [SUCCESS] Pr√©requis v√©rifi√©s ‚úì

REM ===========================================
REM INSTALLATION DES PACKAGES
REM ===========================================

echo [INFO] Installation des packages Python...

REM Mise √† jour de pip
python3.10 -m pip install --user --upgrade pip

REM Installation des packages
python3.10 -m pip install --user -r "%REQUIREMENTS_FILE%"
if errorlevel 1 (
    echo [ERROR] Erreur lors de l'installation des packages
    pause
    exit /b 1
)
echo [SUCCESS] Packages install√©s avec succ√®s ‚úì

REM ===========================================
REM CONFIGURATION DE LA BASE DE DONN√âES
REM ===========================================

echo [INFO] Configuration de la base de donn√©es...

REM Cr√©er le r√©pertoire de logs s'il n'existe pas
if not exist "logs" mkdir logs

REM Appliquer les migrations
echo [INFO] Application des migrations...
python3.10 manage.py makemigrations
if errorlevel 1 (
    echo [WARNING] Aucune nouvelle migration n√©cessaire
) else (
    echo [SUCCESS] Migrations cr√©√©es ‚úì
)

python3.10 manage.py migrate --settings=%PROJECT_NAME%.%SETTINGS_FILE%
if errorlevel 1 (
    echo [ERROR] Erreur lors de l'application des migrations
    pause
    exit /b 1
)
echo [SUCCESS] Migrations appliqu√©es ‚úì

REM ===========================================
REM COLLECTE DES FICHIERS STATIQUES
REM ===========================================

echo [INFO] Collecte des fichiers statiques...

python3.10 manage.py collectstatic --noinput --settings=%PROJECT_NAME%.%SETTINGS_FILE%
if errorlevel 1 (
    echo [ERROR] Erreur lors de la collecte des fichiers statiques
    pause
    exit /b 1
)
echo [SUCCESS] Fichiers statiques collect√©s ‚úì

REM ===========================================
REM CR√âATION DU SUPERUTILISATEUR
REM ===========================================

echo [INFO] Configuration du superutilisateur...

REM V√©rifier si un superutilisateur existe d√©j√†
python3.10 manage.py shell --settings=%PROJECT_NAME%.%SETTINGS_FILE% -c "from django.contrib.auth import get_user_model; User = get_user_model(); print('Superuser exists:', User.objects.filter(is_superuser=True).exists())" | findstr "True" >nul
if errorlevel 1 (
    echo [INFO] Cr√©ation d'un superutilisateur par d√©faut...
    echo from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('admin', 'admin@example.com', 'admin123') if not User.objects.filter(username='admin').exists() else None | python3.10 manage.py shell --settings=%PROJECT_NAME%.%SETTINGS_FILE%
    echo [SUCCESS] Superutilisateur cr√©√© (admin/admin123) ‚úì
) else (
    echo [WARNING] Un superutilisateur existe d√©j√†
)

REM ===========================================
REM V√âRIFICATIONS FINALES
REM ===========================================

echo [INFO] V√©rifications finales...

REM V√©rifier la configuration Django
python3.10 manage.py check --settings=%PROJECT_NAME%.%SETTINGS_FILE%
if errorlevel 1 (
    echo [ERROR] Probl√®mes de configuration d√©tect√©s
    pause
    exit /b 1
)
echo [SUCCESS] Configuration Django valide ‚úì

REM V√©rifier les fichiers statiques
if exist "staticfiles" (
    echo [SUCCESS] Fichiers statiques pr√©sents ‚úì
) else (
    echo [WARNING] Aucun fichier statique trouv√©
)

REM ===========================================
REM INSTRUCTIONS DE CONFIGURATION PYTHONANYWHERE
REM ===========================================

echo.
echo üéâ D√âPLOIEMENT TERMIN√â AVEC SUCC√àS !
echo ==================================
echo.
echo üìã PROCHAINES √âTAPES SUR PYTHONANYWHERE :
echo.
echo 1. üåê Configuration Web App :
echo    - Allez dans l'onglet 'Web' de PythonAnywhere
echo    - Modifiez le fichier WSGI : /var/www/votre-nom_pythonanywhere_com_wsgi.py
echo    - Remplacez le contenu par :
echo.
echo    import os
echo    import sys
echo    path = '/home/votre-nom/votre-projet'
echo    if path not in sys.path:
echo        sys.path.append(path)
echo    os.environ['DJANGO_SETTINGS_MODULE'] = 'gestion_immobiliere.settings_pythonanywhere'
echo    from django.core.wsgi import get_wsgi_application
echo    application = get_wsgi_application()
echo.
echo 2. üìÅ Configuration des fichiers statiques :
echo    - Static files: /static/ ‚Üí /home/votre-nom/votre-projet/staticfiles/
echo    - Media files: /media/ ‚Üí /home/votre-nom/votre-projet/media/
echo.
echo 3. üîß Configuration des variables d'environnement :
echo    - Cr√©ez un fichier .env dans votre projet :
echo    - SECRET_KEY=votre-secret-key-securise
echo    - DEBUG=False
echo    - ALLOWED_HOSTS=votre-nom.pythonanywhere.com
echo.
echo 4. üöÄ Red√©marrez votre application web
echo.
echo 5. üåê Acc√©dez √† votre application :
echo    - URL principale : https://votre-nom.pythonanywhere.com
echo    - Interface admin : https://votre-nom.pythonanywhere.com/admin/
echo    - Connexion : admin / admin123
echo.
echo üìö Documentation compl√®te : GUIDE_DEPLOIEMENT_PYTHONANYWHERE_COMPLET.md
echo.

REM ===========================================
REM R√âSUM√â DES PACKAGES INSTALL√âS
REM ===========================================

echo üì¶ PACKAGES INSTALL√âS :
echo =======================
python3.10 -m pip list --user | findstr /i "django reportlab pillow whitenoise crispy rest_framework"

echo.
echo [SUCCESS] Script de d√©ploiement termin√© ! üéâ
echo.
pause
