#!/usr/bin/env python
"""
Script pour r√©soudre le conflit de migration sur Render
"""
import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gestion_immobiliere.settings_postgresql')
django.setup()

from django.db import connection
from django.core.management import call_command

def fix_migration_conflict():
    """R√©sout le conflit de migration en marquant la migration comme appliqu√©e"""
    print("R√âSOLUTION DU CONFLIT DE MIGRATION")
    print("=" * 50)
    
    with connection.cursor() as cursor:
        # V√©rifier si la table existe
        try:
            cursor.execute("SELECT COUNT(*) FROM paiements_chargebailleur;")
            count = cursor.fetchone()[0]
            print(f"‚úÖ Table paiements_chargebailleur existe avec {count} enregistrements")
            
            # Marquer la migration comme appliqu√©e sans l'ex√©cuter
            print("üîß Marquage de la migration 0019 comme appliqu√©e...")
            call_command('migrate', 'paiements', '0019', '--fake')
            print("‚úÖ Migration 0019 marqu√©e comme appliqu√©e")
            
        except Exception as e:
            print(f"‚ùå Erreur: {e}")
            return False
    
    return True

if __name__ == "__main__":
    success = fix_migration_conflict()
    if success:
        print("\nüéâ Conflit de migration r√©solu !")
    else:
        print("\nüí• √âchec de la r√©solution du conflit")
