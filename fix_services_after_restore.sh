#!/bin/bash

# Script de correction rapide apr√®s restauration VPS
# Corrige l'erreur 502 en red√©marrant les services

set -e

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîß CORRECTION RAPIDE APR√àS RESTAURATION VPS${NC}"
echo "================================================"

# Variables
APP_DIR="/var/www/kbis_immobilier"
SERVICE_NAME="kbis_immobilier"

echo -e "\n${YELLOW}1. DIAGNOSTIC INITIAL${NC}"
echo "V√©rification de l'√©tat des services..."

# V√©rifier l'√©tat des services
echo "√âtat de nginx:"
sudo systemctl is-active nginx || echo "nginx inactif"

echo "√âtat de $SERVICE_NAME:"
sudo systemctl is-active $SERVICE_NAME || echo "$SERVICE_NAME inactif"

echo -e "\n${YELLOW}2. V√âRIFICATION DES FICHIERS CRITIQUES${NC}"

# V√©rifier que l'application existe
if [ ! -d "$APP_DIR" ]; then
    echo -e "${RED}‚ùå R√©pertoire de l'application non trouv√©: $APP_DIR${NC}"
    exit 1
fi

cd $APP_DIR

# V√©rifier les fichiers essentiels
if [ ! -f "manage.py" ]; then
    echo -e "${RED}‚ùå manage.py non trouv√©${NC}"
    exit 1
fi

if [ ! -f "gestion_immobiliere/settings.py" ]; then
    echo -e "${RED}‚ùå settings.py non trouv√©${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Fichiers essentiels trouv√©s${NC}"

echo -e "\n${YELLOW}3. V√âRIFICATION DE LA SYNTAXE PYTHON${NC}"

# V√©rifier la syntaxe Python
python3 -m py_compile gestion_immobiliere/settings.py 2>&1 || {
    echo -e "${RED}‚ùå Erreur de syntaxe dans settings.py${NC}"
    echo "Correction automatique..."
    
    # Corriger les probl√®mes d'indentation courants
    sed -i 's/^    CSRF_COOKIE_SECURE/        CSRF_COOKIE_SECURE/' gestion_immobiliere/settings.py
    sed -i 's/^    SESSION_COOKIE_SECURE/        SESSION_COOKIE_SECURE/' gestion_immobiliere/settings.py
    sed -i 's/^    SECURE_SSL_REDIRECT/        SECURE_SSL_REDIRECT/' gestion_immobiliere/settings.py
    sed -i 's/^    SECURE_BROWSER_XSS_FILTER/        SECURE_BROWSER_XSS_FILTER/' gestion_immobiliere/settings.py
    sed -i 's/^    SECURE_CONTENT_TYPE_NOSNIFF/        SECURE_CONTENT_TYPE_NOSNIFF/' gestion_immobiliere/settings.py
    sed -i 's/^    X_FRAME_OPTIONS/        X_FRAME_OPTIONS/' gestion_immobiliere/settings.py
    
    echo "V√©rification apr√®s correction..."
    python3 -m py_compile gestion_immobiliere/settings.py
}

echo -e "\n${YELLOW}4. RED√âMARRAGE DES SERVICES${NC}"

# Arr√™ter les services
echo "Arr√™t des services..."
sudo systemctl stop nginx 2>/dev/null || true
sudo systemctl stop $SERVICE_NAME 2>/dev/null || true

# Attendre un peu
sleep 2

# Red√©marrer le service Django
echo "Red√©marrage de $SERVICE_NAME..."
sudo systemctl start $SERVICE_NAME
sleep 3

# V√©rifier que le service Django fonctionne
if sudo systemctl is-active --quiet $SERVICE_NAME; then
    echo -e "${GREEN}‚úÖ Service $SERVICE_NAME d√©marr√©${NC}"
else
    echo -e "${RED}‚ùå √âchec du d√©marrage de $SERVICE_NAME${NC}"
    echo "Logs du service:"
    sudo journalctl -u $SERVICE_NAME --no-pager -l -n 20
    exit 1
fi

# Red√©marrer nginx
echo "Red√©marrage de nginx..."
sudo systemctl start nginx
sleep 2

# V√©rifier que nginx fonctionne
if sudo systemctl is-active --quiet nginx; then
    echo -e "${GREEN}‚úÖ Service nginx d√©marr√©${NC}"
else
    echo -e "${RED}‚ùå √âchec du d√©marrage de nginx${NC}"
    echo "Logs de nginx:"
    sudo journalctl -u nginx --no-pager -l -n 20
    exit 1
fi

echo -e "\n${YELLOW}5. V√âRIFICATION DE LA CONNECTIVIT√â${NC}"

# Tester la connectivit√© interne
echo "Test de connectivit√© interne..."
if curl -s -I http://127.0.0.1:8000 >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Gunicorn r√©pond sur le port 8000${NC}"
else
    echo -e "${RED}‚ùå Gunicorn ne r√©pond pas sur le port 8000${NC}"
    echo "V√©rification des processus:"
    ps aux | grep gunicorn || echo "Aucun processus gunicorn trouv√©"
fi

# Tester la connectivit√© externe
echo "Test de connectivit√© externe..."
if curl -s -I http://78.138.58.185 >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Application accessible via nginx${NC}"
else
    echo -e "${RED}‚ùå Application non accessible via nginx${NC}"
    echo "V√©rification de la configuration nginx:"
    sudo nginx -t
fi

echo -e "\n${YELLOW}6. COLLECTE DES FICHIERS STATIQUES${NC}"
python3 manage.py collectstatic --noinput

echo -e "\n${GREEN}üéâ CORRECTION TERMIN√âE !${NC}"
echo "Votre application devrait maintenant √™tre accessible sur:"
echo "http://78.138.58.185"

echo -e "\n${YELLOW}√âtat final des services:${NC}"
sudo systemctl status $SERVICE_NAME --no-pager -l
sudo systemctl status nginx --no-pager -l

