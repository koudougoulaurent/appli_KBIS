#!/usr/bin/env python
"""
Script pour mettre √† jour les permissions des groupes de travail
selon la distribution des pages par fonction
"""

import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gestion_immobiliere.settings')
django.setup()

from utilisateurs.models import GroupeTravail
from django.core.management import execute_from_command_line

def mettre_a_jour_permissions_groupes():
    """Met √† jour les permissions des groupes selon leur fonction"""
    
    print("üîÑ Mise √† jour des permissions des groupes...")
    
    # D√©finition des permissions par groupe
    permissions_groupes = {
        'CAISSE': {
            'modules': ['paiements', 'retraits', 'cautions', 'rapports_financiers'],
            'actions': ['read', 'write', 'create'],
            'restrictions': ['pas_acces_utilisateurs', 'pas_acces_groupes'],
            'description': 'Gestion des paiements, retraits et finances'
        },
        'ADMINISTRATION': {
            'modules': ['proprietes', 'bailleurs', 'locataires', 'contrats', 'notifications'],
            'actions': ['read', 'write', 'create', 'delete'],
            'restrictions': ['pas_acces_utilisateurs', 'pas_acces_groupes'],
            'description': 'Gestion administrative des propri√©t√©s et contrats'
        },
        'CONTROLES': {
            'modules': ['paiements', 'contrats', 'proprietes', 'audit', 'rapports_controle'],
            'actions': ['read', 'validate', 'audit'],
            'restrictions': ['pas_modification_directe', 'pas_acces_utilisateurs'],
            'description': 'Contr√¥le et audit des donn√©es'
        },
        'PRIVILEGE': {
            'modules': ['paiements', 'proprietes', 'contrats', 'utilisateurs', 'groupes', 'systeme'],
            'actions': ['read', 'write', 'create', 'delete', 'admin'],
            'restrictions': [],
            'description': 'Acc√®s complet √† toutes les fonctionnalit√©s'
        }
    }
    
    # Mise √† jour des groupes
    for nom_groupe, permissions in permissions_groupes.items():
        try:
            groupe = GroupeTravail.objects.get(nom=nom_groupe)
            groupe.permissions = permissions
            groupe.description = permissions['description']
            groupe.save()
            print(f"‚úÖ Groupe {nom_groupe} mis √† jour avec succ√®s")
            print(f"   Modules: {', '.join(permissions['modules'])}")
            print(f"   Actions: {', '.join(permissions['actions'])}")
            print()
        except GroupeTravail.DoesNotExist:
            print(f"‚ùå Groupe {nom_groupe} non trouv√©")
        except Exception as e:
            print(f"‚ùå Erreur lors de la mise √† jour du groupe {nom_groupe}: {e}")
    
    print("üéØ Distribution des pages par groupe:")
    print()
    print("üìä CAISSE:")
    print("   ‚Ä¢ Paiements (cr√©ation, validation, suivi)")
    print("   ‚Ä¢ Retraits vers les bailleurs")
    print("   ‚Ä¢ Suivi des cautions")
    print("   ‚Ä¢ Rapports financiers")
    print()
    print("üìã ADMINISTRATION:")
    print("   ‚Ä¢ Propri√©t√©s (cr√©ation, modification, suivi)")
    print("   ‚Ä¢ Bailleurs (gestion compl√®te)")
    print("   ‚Ä¢ Locataires (gestion compl√®te)")
    print("   ‚Ä¢ Contrats (cr√©ation, modification, renouvellement)")
    print("   ‚Ä¢ Notifications")
    print()
    print("üîç CONTROLES:")
    print("   ‚Ä¢ Contr√¥le des paiements")
    print("   ‚Ä¢ Validation des contrats")
    print("   ‚Ä¢ Audit des donn√©es")
    print("   ‚Ä¢ Rapports de contr√¥le")
    print()
    print("üëë PRIVILEGE:")
    print("   ‚Ä¢ Toutes les pages")
    print("   ‚Ä¢ Gestion des utilisateurs")
    print("   ‚Ä¢ Gestion des groupes")
    print("   ‚Ä¢ Configuration syst√®me")
    print()
    
    print("‚úÖ Mise √† jour des permissions termin√©e!")

if __name__ == '__main__':
    mettre_a_jour_permissions_groupes() 