# Generated by Django 4.2.24 on 2025-10-03 17:22

from django.db import migrations, models
from django.utils.translation import gettext_lazy as _


def convert_mois_paye_to_string(apps, schema_editor):
    """Convertit les dates en chaînes de caractères pour le champ mois_paye"""
    Paiement = apps.get_model('paiements', 'Paiement')
    
    for paiement in Paiement.objects.all():
        if paiement.mois_paye:
            # Convertir la date en format "mois année" (ex: "octobre 2025")
            mois_francais = {
                1: 'janvier', 2: 'février', 3: 'mars', 4: 'avril',
                5: 'mai', 6: 'juin', 7: 'juillet', 8: 'août',
                9: 'septembre', 10: 'octobre', 11: 'novembre', 12: 'décembre'
            }
            
            mois_nom = mois_francais.get(paiement.mois_paye.month, 'inconnu')
            annee = paiement.mois_paye.year
            paiement.mois_paye = f"{mois_nom} {annee}"
            paiement.save()


def reverse_convert_mois_paye(apps, schema_editor):
    """Fonction inverse pour revenir aux dates"""
    # Cette fonction ne fait rien car la conversion inverse est complexe
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('paiements', '0029_alter_echelonpaiement_montant_and_more'),
    ]

    operations = [
        # D'abord, changer le type de champ temporairement
        migrations.AlterField(
            model_name='paiement',
            name='mois_paye',
            field=models.CharField(
                max_length=50,
                null=True,
                blank=True,
                verbose_name=_("Mois payé"),
                help_text=_("Mois pour lequel ce paiement est effectué (ex: octobre 2025)")
            ),
        ),
    ]
