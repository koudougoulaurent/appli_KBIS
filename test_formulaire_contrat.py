#!/usr/bin/env python
"""
Script de test pour v√©rifier que le formulaire de contrat fonctionne avec le remplissage automatique du loyer
"""

import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gestion_immobiliere.settings')
django.setup()

from contrats.forms import ContratForm
from proprietes.models import Propriete

def test_formulaire_contrat():
    """Test du formulaire de contrat avec remplissage automatique du loyer"""
    
    print("üß™ Test du formulaire de contrat avec remplissage automatique du loyer")
    print("=" * 70)
    
    try:
        # 1. Cr√©er le formulaire
        print("\n1. Cr√©ation du formulaire...")
        form = ContratForm()
        print("   ‚úÖ Formulaire cr√©√© avec succ√®s")
        
        # 2. V√©rifier les donn√©es des propri√©t√©s
        print("\n2. V√©rification des donn√©es des propri√©t√©s...")
        if hasattr(form, 'proprietes_data'):
            print(f"   ‚úÖ Donn√©es des propri√©t√©s disponibles : {len(form.proprietes_data)} propri√©t√©s")
            
            for prop_id, prop_data in form.proprietes_data.items():
                print(f"      - ID {prop_id}: {prop_data['titre']} - Loyer: {prop_data['loyer']} XOF")
        else:
            print("   ‚ùå Donn√©es des propri√©t√©s non disponibles")
        
        # 3. V√©rifier que les champs sont optionnels
        print("\n3. V√©rification des champs optionnels...")
        
        if not form.fields['charges_mensuelles'].required:
            print("   ‚úÖ Champ charges_mensuelles rendu optionnel")
        else:
            print("   ‚ùå Champ charges_mensuelles toujours requis")
            
        if not form.fields['depot_garantie'].required:
            print("   ‚úÖ Champ depot_garantie rendu optionnel")
        else:
            print("   ‚ùå Champ depot_garantie toujours requis")
        
        # 4. V√©rifier que le champ loyer est en lecture seule
        print("\n4. V√©rification du champ loyer...")
        loyer_widget = form.fields['loyer_mensuel'].widget
        if hasattr(loyer_widget, 'attrs') and loyer_widget.attrs.get('readonly'):
            print("   ‚úÖ Champ loyer_mensuel configur√© en lecture seule")
        else:
            print("   ‚ùå Champ loyer_mensuel n'est pas en lecture seule")
        
        # 5. V√©rifier qu'il y a des propri√©t√©s disponibles
        print("\n5. V√©rification des propri√©t√©s disponibles...")
        proprietes_disponibles = Propriete.objects.filter(disponible=True)
        print(f"   ‚úÖ {proprietes_disponibles.count()} propri√©t√©s disponibles")
        
        if proprietes_disponibles.exists():
            for prop in proprietes_disponibles:
                print(f"      - {prop.titre} (ID: {prop.id}) - Loyer: {prop.loyer_actuel} XOF")
        
        print("\nüéâ Test du formulaire termin√© avec succ√®s !")
        print("\nüìã Pour tester le remplissage automatique :")
        print("   1. Allez sur http://localhost:8000/contrats/ajouter/")
        print("   2. S√©lectionnez une propri√©t√© dans le formulaire")
        print("   3. Le champ loyer devrait se remplir automatiquement")
        
    except Exception as e:
        print(f"\n‚ùå Erreur lors du test : {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    test_formulaire_contrat()
