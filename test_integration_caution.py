#!/usr/bin/env python3
"""
Script de test pour v√©rifier l'int√©gration de la gestion de caution dans le formulaire de contrat
"""

import os
import sys
import django

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'gestion_immobiliere.settings')
django.setup()

from django.test import TestCase
from django.contrib.auth import get_user_model
from contrats.models import Contrat, RecuCaution
from contrats.forms import ContratForm
from proprietes.models import Propriete, Locataire, Bailleur

Utilisateur = get_user_model()

def test_integration_caution():
    """
    Test de l'int√©gration de la gestion de caution dans le formulaire de contrat
    """
    print("üß™ Test de l'int√©gration caution-contrat...")
    
    try:
        # 1. V√©rifier que le formulaire contient les nouveaux champs
        print("1. V√©rification des champs du formulaire...")
        form = ContratForm()
        
        # V√©rifier la pr√©sence des champs de caution
        caution_fields = [
            'caution_payee',
            'date_paiement_caution', 
            'avance_loyer_payee',
            'date_paiement_avance',
            'generer_recu_caution'
        ]
        
        for field_name in caution_fields:
            if field_name in form.fields:
                print(f"   ‚úÖ Champ '{field_name}' pr√©sent")
            else:
                print(f"   ‚ùå Champ '{field_name}' manquant")
                return False
        
        # 2. V√©rifier que les champs sont dans la liste des champs du mod√®le
        print("\n2. V√©rification des champs du mod√®le...")
        model_fields = [
            'caution_payee',
            'date_paiement_caution',
            'avance_loyer_payee', 
            'date_paiement_avance'
        ]
        
        for field_name in model_fields:
            if hasattr(Contrat, field_name):
                print(f"   ‚úÖ Champ mod√®le '{field_name}' pr√©sent")
            else:
                print(f"   ‚ùå Champ mod√®le '{field_name}' manquant")
                return False
        
        # 3. V√©rifier la pr√©sence du mod√®le RecuCaution
        print("\n3. V√©rification du mod√®le RecuCaution...")
        if hasattr(RecuCaution, 'contrat'):
            print("   ‚úÖ Mod√®le RecuCaution avec relation contrat pr√©sent")
        else:
            print("   ‚ùå Mod√®le RecuCaution manquant ou mal configur√©")
            return False
        
        print("\nüéâ Tous les tests d'int√©gration sont pass√©s avec succ√®s!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå Erreur lors des tests: {str(e)}")
        return False

def test_form_validation():
    """
    Test de la validation du formulaire avec les nouveaux champs
    """
    print("\nüß™ Test de validation du formulaire...")
    
    try:
        # Cr√©er des donn√©es de test
        test_data = {
            'numero_contrat': 'TEST-CT-001',
            'loyer_mensuel': '50000',
            'charges_mensuelles': '5000',
            'depot_garantie': '100000',
            'avance_loyer': '50000',
            'jour_paiement': 1,
            'mode_paiement': 'virement',
            'caution_payee': True,
            'date_paiement_caution': '2024-01-15',
            'avance_loyer_payee': False,
            'generer_recu_caution': True,
            'telecharger_pdf': False
        }
        
        # Tester la validation
        form = ContratForm(data=test_data)
        if form.is_valid():
            print("   ‚úÖ Formulaire valide avec donn√©es de test")
            return True
        else:
            print(f"   ‚ùå Formulaire invalide: {form.errors}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå Erreur lors du test de validation: {str(e)}")
        return False

def main():
    """
    Fonction principale de test
    """
    print("üöÄ D√©marrage des tests d'int√©gration caution-contrat\n")
    
    # Test 1: V√©rification de l'int√©gration
    if not test_integration_caution():
        print("\n‚ùå √âchec des tests d'int√©gration")
        sys.exit(1)
    
    # Test 2: Validation du formulaire
    if not test_form_validation():
        print("\n‚ùå √âchec des tests de validation")
        sys.exit(1)
    
    print("\nüéâ Tous les tests sont pass√©s avec succ√®s!")
    print("\nüìã R√©sum√© de l'int√©gration:")
    print("   ‚Ä¢ Champs de caution int√©gr√©s dans le formulaire de contrat")
    print("   ‚Ä¢ Validation automatique des champs conditionnels")
    print("   ‚Ä¢ Cr√©ation automatique du re√ßu de caution")
    print("   ‚Ä¢ Interface utilisateur unifi√©e et intuitive")
    print("   ‚Ä¢ Gestion des erreurs et validation robuste")

if __name__ == "__main__":
    main()
